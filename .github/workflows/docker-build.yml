# name: Build and Push Multiple Docker Images

# on:
#   push:
#     branches: [ main ]
#     paths:
#       - 'services/**'
#       - 'versions.sh'
#   workflow_dispatch:

# jobs:
#   build-image:
#     name: Build & Push 
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0  # Fetch all history for accurate diff

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Identify which service to build
#         id: service
#         run: |
#           # Initialize an empty array for services
#           services=()
                  
#           # Check for changes in the "api" directory
#           if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q ^services/api/; then
#           services+=("api")
#           fi
          
#           # Check for changes in the "backend" directory
#           if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q ^services/backend/; then
#           services+=("backend")
#           fi

          
#           # Export the services array to the environment
#           echo "services=${services[@]}" >> $GITHUB_ENV
#           echo "Services: ${services[@]}"


#       - name: Build and Push Docker Images
#         run: |
#           source versions.sh
#           if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -q ^services/api/; then
#           echo "Building and pushing Docker image for backend"
#           docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:$ ./$service --tag $
#           docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
#           fi
          

#           for service in ${{ env.services }}; do
#             echo "Building and pushing Docker image for $service"
#             docker build -t ${{ secrets.DOCKER_USERNAME }}/$service:latest ./$service --tag 
#             docker push ${{ secrets.DOCKER_USERNAME }}/$service:latest
#           done
